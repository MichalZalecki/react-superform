{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///react-superform.min.js","webpack:///webpack/bootstrap eb67ac22c081fe9e8628","webpack:///./src/Superform.js","webpack:///external \"React\"","webpack:///external \"_\"","webpack:///external \"validator\""],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_Superform","_Superform2","_defineProperty","key","enumerable","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","create","constructor","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","i","length","descriptor","protoProps","staticProps","_react","_react2","_lodash","_lodash2","_validator","_validator2","Superform","_React$Component","_this","getPrototypeOf","state","data","errors","submitted","event","name","_getNodeValue","_validateNode","Promise","all","_updateDataOf","_updateErrorsOf","_this2","preventDefault","_createErrors","markAsSubmitted","then","_updateErrors","isFormValid","onSuccessSubmit","onErrorSubmit","_this3","resolve","setState","_this4","requestChange","handleChange","refs","omitBy","getErrors","pick","get","validity","keys","isEmpty","getErrorsOf","isSubmited","isFieldValid","error","first","message","_getMessage","rule","_parseMessage","_this5","mapValues","node","_this6","_this7","assign","fieldErrors","_this8","messages","_getCustomMessagesOf","msgDataset","dataset","JSON","parse","_getCustomMessageForRuleOf","DEFAULT_MESSAGES","Error","parsedMessage","replace","rules","_collectRules","fails","_validate","type","checked","email","url","pattern","required","min","getAttribute","max","minLength","maxLength","equals","_valueExists","push","_valueMatchesPattern","isEmail","isURL","require_protocol","_valueIsGreaterOrEqual","_valueIsLowerOrEqual","_valueLengthIsGreaterOrEqual","_valueLengthIsLowerOrEqual","_valueEqualsValueOf","RegExp","test","number","parseInt","lower","Number","isNaN","stringify","higher","arguments","undefined","getValueOf","Component"],"mappings":"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","file":"react-superform.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"React\"), require(\"_\"), require(\"validator\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Superform\", [\"React\", \"_\", \"validator\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Superform\"] = factory(require(\"React\"), require(\"_\"), require(\"validator\"));\n\telse\n\t\troot[\"Superform\"] = factory(root[\"React\"], root[\"_\"], root[\"validator\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"React\"), require(\"_\"), require(\"validator\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Superform\", [\"React\", \"_\", \"validator\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Superform\"] = factory(require(\"React\"), require(\"_\"), require(\"validator\"));\n\telse\n\t\troot[\"Superform\"] = factory(root[\"React\"], root[\"_\"], root[\"validator\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _Superform = __webpack_require__(1);\n\n\tvar _Superform2 = _interopRequireDefault(_Superform);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\texports.default = _Superform2.default;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _lodash = __webpack_require__(3);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tvar _validator = __webpack_require__(4);\n\t\n\tvar _validator2 = _interopRequireDefault(_validator);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/** Superform's Superclass */\n\t\n\tvar Superform = function (_React$Component) {\n\t  _inherits(Superform, _React$Component);\n\t\n\t  function Superform(props) {\n\t    _classCallCheck(this, Superform);\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Superform).call(this, props));\n\t\n\t    _this.state = {\n\t      data: {},\n\t      errors: {},\n\t      submitted: false\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Called on form success submission.\n\t   *\n\t   * @param data {Object} Form data with all fields valid\n\t   */\n\t\n\t\n\t  _createClass(Superform, [{\n\t    key: \"onSuccessSubmit\",\n\t    value: function onSuccessSubmit(data) {}\n\t\n\t    /**\n\t     * Called on form failure submission.\n\t     *\n\t     * @param errors {Object} Form errors object\n\t     * @param data {Object} Form data\n\t     */\n\t\n\t  }, {\n\t    key: \"onErrorSubmit\",\n\t    value: function onErrorSubmit(errors, data) {}\n\t\n\t    /**\n\t    * Handler for input change called internally.\n\t    *\n\t    * @param event\n\t    * @return {Promise} Promise resolved when data and errors are set if any\n\t    */\n\t\n\t  }, {\n\t    key: \"handleChange\",\n\t    value: function handleChange(event) {\n\t      var name = event.target.name;\n\t      var value = this._getNodeValue(event.target);\n\t      var errors = this._validateNode(event.target);\n\t\n\t      return Promise.all([this._updateDataOf(name, value), this._updateErrorsOf(name, errors)]);\n\t    }\n\t\n\t    /**\n\t    * Handler for form submission. Your form should call it as `onSubmit` handler.\n\t    *\n\t    * @param event\n\t    * @return {Promise} Promise resolved with `onSuccessSubmit` or `onErrorSubmit` result\n\t    */\n\t\n\t  }, {\n\t    key: \"handleSubmit\",\n\t    value: function handleSubmit(event) {\n\t      var _this2 = this;\n\t\n\t      event.preventDefault();\n\t      var errors = this._createErrors();\n\t      return this.markAsSubmitted().then(function () {\n\t        return _this2._updateErrors(errors);\n\t      }).then(function () {\n\t        return _this2.isFormValid() ? _this2.onSuccessSubmit(_this2.state.data) : _this2.onErrorSubmit(_this2.state.errors, _this2.state.data);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Marks form as submitted by setting `this.status.submitted` to `true`.\n\t     *\n\t     * @return {Promise} Promise resolved after state is set.\n\t     */\n\t\n\t  }, {\n\t    key: \"markAsSubmitted\",\n\t    value: function markAsSubmitted() {\n\t      var _this3 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this3.setState({ submitted: true }, resolve);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Determines whether form was submitted.\n\t     *\n\t     * @return {boolean}\n\t     */\n\t\n\t  }, {\n\t    key: \"isSubmited\",\n\t    value: function isSubmited() {\n\t      return this.state.submitted;\n\t    }\n\t\n\t    /**\n\t     * Returns value of specified field.\n\t     *\n\t     * @param name {string} Field name\n\t     * @return {string|boolean|undefined} Field value\n\t     */\n\t\n\t  }, {\n\t    key: \"getValueOf\",\n\t    value: function getValueOf(name) {\n\t      return this.state.data[name];\n\t    }\n\t\n\t    /**\n\t     * Links field value with form state. Simulates two way data binding.\n\t     *\n\t     * @param {string} Field name\n\t     * @return {Object}\n\t     */\n\t\n\t  }, {\n\t    key: \"linkStateOf\",\n\t    value: function linkStateOf(name) {\n\t      var _this4 = this;\n\t\n\t      return {\n\t        value: this.state.data[name],\n\t        requestChange: function requestChange() {\n\t          return _this4.handleChange({ target: _this4.refs[name] });\n\t        }\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Returns form data.\n\t     *\n\t     * @return {Object} Form data which is `this.state.data`\n\t     */\n\t\n\t  }, {\n\t    key: \"getData\",\n\t    value: function getData() {\n\t      return this.state.data;\n\t    }\n\t\n\t    /**\n\t     * Returns form errors.\n\t     *\n\t     * @return {Object} Form data which is `this.state.errors`\n\t     */\n\t\n\t  }, {\n\t    key: \"getErrors\",\n\t    value: function getErrors() {\n\t      var errors = (0, _lodash2.default)(this.state.errors).omitBy(function (errors) {\n\t        return !errors.length;\n\t      }).value();\n\t\n\t      return errors;\n\t    }\n\t\n\t    /**\n\t     * Returns errors of specified field.\n\t     *\n\t     * @param {Array}\n\t     */\n\t\n\t  }, {\n\t    key: \"getErrorsOf\",\n\t    value: function getErrorsOf(name) {\n\t      var errors = (0, _lodash2.default)(this.getErrors()).pick(name).get(name, []);\n\t\n\t      return errors;\n\t    }\n\t\n\t    /**\n\t     * Determines whether form is valid or not based on form errors.\n\t     *\n\t     * @return {boolean}\n\t     */\n\t\n\t  }, {\n\t    key: \"isFormValid\",\n\t    value: function isFormValid() {\n\t      var validity = (0, _lodash2.default)(this.getErrors()).keys().isEmpty();\n\t\n\t      return validity;\n\t    }\n\t\n\t    /**\n\t     * Determines whether field is valid or not based on form errors.\n\t     *\n\t     * @param name {string} Field name\n\t     * @return {boolean}\n\t     */\n\t\n\t  }, {\n\t    key: \"isFieldValid\",\n\t    value: function isFieldValid(name) {\n\t      var validity = (0, _lodash2.default)(this.getErrorsOf(name)).isEmpty();\n\t\n\t      return validity;\n\t    }\n\t\n\t    /**\n\t     * Returns final error message for particular field\n\t     *\n\t     * @param name {string} Field name\n\t     * @return {string} Error message for the field\n\t     */\n\t\n\t  }, {\n\t    key: \"getErrorMessageOf\",\n\t    value: function getErrorMessageOf(name) {\n\t      if (!this.isSubmited() || this.isFieldValid(name)) return null;\n\t      var error = (0, _lodash2.default)(this.getErrorsOf(name)).first();\n\t      var message = this._getMessage(name, error.rule);\n\t      return error.data ? this._parseMessage(message, error.data) : message;\n\t    }\n\t\n\t    /** */\n\t\n\t  }, {\n\t    key: \"_createErrors\",\n\t    value: function _createErrors() {\n\t      var _this5 = this;\n\t\n\t      return (0, _lodash2.default)(this.refs).mapValues(function (node) {\n\t        return _this5._validateNode(node);\n\t      }).omitBy(function (errors) {\n\t        return !errors.length;\n\t      }).value();\n\t    }\n\t\n\t    /** */\n\t\n\t  }, {\n\t    key: \"_updateErrors\",\n\t    value: function _updateErrors(errors) {\n\t      var _this6 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this6.setState({ errors: errors }, resolve);\n\t      });\n\t    }\n\t\n\t    /** */\n\t\n\t  }, {\n\t    key: \"_updateDataOf\",\n\t    value: function _updateDataOf(name, value) {\n\t      var _this7 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        var data = _lodash2.default.assign({}, _this7.state.data, _defineProperty({}, name, value));\n\t        _this7.setState({ data: data }, resolve);\n\t      });\n\t    }\n\t\n\t    /** */\n\t\n\t  }, {\n\t    key: \"_updateErrorsOf\",\n\t    value: function _updateErrorsOf(name, fieldErrors) {\n\t      var _this8 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        var errors = _lodash2.default.assign({}, _this8.state.errors, _defineProperty({}, name, fieldErrors));\n\t        _this8.setState({ errors: errors }, resolve);\n\t      });\n\t    }\n\t\n\t    /** */\n\t\n\t  }, {\n\t    key: \"_getCustomMessageForRuleOf\",\n\t    value: function _getCustomMessageForRuleOf(name, rule) {\n\t      var messages = this._getCustomMessagesOf(name);\n\t      var message = messages[rule];\n\t      return message;\n\t    }\n\t\n\t    /** */\n\t\n\t  }, {\n\t    key: \"_getCustomMessagesOf\",\n\t    value: function _getCustomMessagesOf(name) {\n\t      var msgDataset = this.refs[name].dataset.messages;\n\t      var messages = msgDataset ? JSON.parse(msgDataset) : {};\n\t      return messages;\n\t    }\n\t\n\t    /** */\n\t\n\t  }, {\n\t    key: \"_getMessage\",\n\t    value: function _getMessage(name, rule) {\n\t      var message = this._getCustomMessageForRuleOf(name, rule) || this.constructor.DEFAULT_MESSAGES[rule];\n\t      if (!message) throw new Error(\"Superform: There is no message for such rule. Passed: \" + rule);\n\t      return message;\n\t    }\n\t\n\t    /** */\n\t\n\t  }, {\n\t    key: \"_parseMessage\",\n\t    value: function _parseMessage(message, data) {\n\t      var parsedMessage = message.replace(\":data\", data);\n\t      return parsedMessage;\n\t    }\n\t\n\t    /** */\n\t\n\t  }, {\n\t    key: \"_validateNode\",\n\t    value: function _validateNode(node) {\n\t      var value = this._getNodeValue(node);\n\t      var rules = this._collectRules(node);\n\t      var fails = this._validate(value, rules);\n\t      return fails;\n\t    }\n\t\n\t    /** */\n\t\n\t  }, {\n\t    key: \"_getNodeValue\",\n\t    value: function _getNodeValue(node) {\n\t      switch (node.type) {\n\t        case \"checkbox\":\n\t          return node.checked;\n\t        default:\n\t          return node.value;\n\t      }\n\t    }\n\t\n\t    /** */\n\t\n\t  }, {\n\t    key: \"_collectRules\",\n\t    value: function _collectRules(node) {\n\t      var rules = {\n\t        email: node.type === \"email\",\n\t        url: node.type === \"url\",\n\t        pattern: node.pattern,\n\t        required: node.required,\n\t        min: node.getAttribute(\"min\"),\n\t        max: node.getAttribute(\"max\"),\n\t        minLength: node.getAttribute(\"minLength\"),\n\t        maxLength: node.getAttribute(\"maxLength\"),\n\t        equals: node.dataset.equals\n\t      };\n\t      return rules;\n\t    }\n\t\n\t    /** */\n\t\n\t  }, {\n\t    key: \"_validate\",\n\t    value: function _validate(value, rules) {\n\t      var fails = [];\n\t\n\t      rules.required && !this._valueExists(value) && fails.push({ rule: \"required\" });\n\t\n\t      if (rules.pattern) {\n\t        rules.pattern && !this._valueMatchesPattern(value, rules.pattern) && fails.push({ rule: \"pattern\" });\n\t      } else {\n\t        rules.email && !_validator2.default.isEmail(value) && fails.push({ rule: \"email\" });\n\t        rules.url && !_validator2.default.isURL(value, { require_protocol: true }) && fails.push({ rule: \"url\" });\n\t      }\n\t\n\t      if (rules.required || this._valueExists(value)) {\n\t        rules.min && !this._valueIsGreaterOrEqual(value, rules.min) && fails.push({ rule: \"min\", data: rules.min });\n\t        rules.max && !this._valueIsLowerOrEqual(value, rules.max) && fails.push({ rule: \"max\", data: rules.max });\n\t        rules.minLength && !this._valueLengthIsGreaterOrEqual(value, rules.minLength) && fails.push({ rule: \"minLength\", data: rules.minLength });\n\t        rules.maxLength && !this._valueLengthIsLowerOrEqual(value, rules.maxLength) && fails.push({ rule: \"maxLength\", data: rules.maxLength });\n\t      }\n\t\n\t      rules.equals && !this._valueEqualsValueOf(value, rules.equals) && fails.push({ rule: \"equals\", data: rules.equals });\n\t\n\t      return fails;\n\t    }\n\t\n\t    /** */\n\t\n\t  }, {\n\t    key: \"_valueMatchesPattern\",\n\t    value: function _valueMatchesPattern(value, pattern) {\n\t      return new RegExp(pattern).test(value);\n\t    }\n\t\n\t    /** */\n\t\n\t  }, {\n\t    key: \"_valueExists\",\n\t    value: function _valueExists(value) {\n\t      return !!value;\n\t    }\n\t\n\t    /** */\n\t\n\t  }, {\n\t    key: \"_valueIsGreaterOrEqual\",\n\t    value: function _valueIsGreaterOrEqual(value, min) {\n\t      var number = parseInt(value);\n\t      var lower = parseInt(min);\n\t      if (Number.isNaN(lower)) throw Error(\"Superform: Invalid \\\"min\\\" rule. Use only with numbers. Passed: \" + JSON.stringify(min));\n\t      if (Number.isNaN(number)) return false;\n\t      return number >= lower;\n\t    }\n\t\n\t    /** */\n\t\n\t  }, {\n\t    key: \"_valueIsLowerOrEqual\",\n\t    value: function _valueIsLowerOrEqual(value, max) {\n\t      var number = parseInt(value);\n\t      var higher = parseInt(max);\n\t      if (Number.isNaN(higher)) throw Error(\"Superform: Invalid \\\"max\\\" rule. Use only with numbers. Passed: \" + JSON.stringify(max));\n\t      if (Number.isNaN(number)) return false;\n\t      return number <= higher;\n\t    }\n\t\n\t    /** */\n\t\n\t  }, {\n\t    key: \"_valueLengthIsGreaterOrEqual\",\n\t    value: function _valueLengthIsGreaterOrEqual() {\n\t      var value = arguments.length <= 0 || arguments[0] === undefined ? \"\" : arguments[0];\n\t      var minLength = arguments[1];\n\t\n\t      var length = value.length;\n\t      var lower = parseInt(minLength);\n\t      if (Number.isNaN(lower)) throw Error(\"Superform: Invalid \\\"minLength\\\" rule. Use only with numbers. Passed: \" + JSON.stringify(minLength));\n\t      return length >= lower;\n\t    }\n\t\n\t    /** */\n\t\n\t  }, {\n\t    key: \"_valueLengthIsLowerOrEqual\",\n\t    value: function _valueLengthIsLowerOrEqual() {\n\t      var value = arguments.length <= 0 || arguments[0] === undefined ? \"\" : arguments[0];\n\t      var maxLength = arguments[1];\n\t\n\t      var length = value.length;\n\t      var higher = parseInt(maxLength);\n\t      if (Number.isNaN(higher)) throw Error(\"Superform: Invalid \\\"maxLength\\\" rule. Use only with numbers. Passed: \" + JSON.stringify(maxLength));\n\t      return length <= higher;\n\t    }\n\t\n\t    /** */\n\t\n\t  }, {\n\t    key: \"_valueEqualsValueOf\",\n\t    value: function _valueEqualsValueOf(value, equals) {\n\t      return value === this.getValueOf(equals);\n\t    }\n\t  }]);\n\t\n\t  return Superform;\n\t}(_react2.default.Component);\n\t\n\tSuperform.DEFAULT_MESSAGES = {\n\t  \"email\": \"This is not a valid email.\",\n\t  \"url\": \"This is not a valid URL.\",\n\t  \"required\": \"Field is required.\",\n\t  \"pattern\": \"Value format is invalid.\",\n\t  \"min\": \"Value should be greater or equal :data.\",\n\t  \"max\": \"Value should be lower or equal :data.\",\n\t  \"minLength\": \"Value is too short. Value length should be greater or equal :data.\",\n\t  \"maxLength\": \"Value is too long. Value length should be lower or equal :data.\",\n\t  \"equals\": \"Value must be the same as :data.\"\n\t};\n\t\n\texports.default = Superform;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** react-superform.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap eb67ac22c081fe9e8628\n **/","import React from \"react\";\nimport _ from \"lodash\";\nimport validator from \"validator\";\n\n/** Superform's Superclass */\nclass Superform extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: {},\n      errors: {},\n      submitted: false,\n    };\n  }\n\n  /**\n   * Called on form success submission.\n   *\n   * @param data {Object} Form data with all fields valid\n   */\n  onSuccessSubmit(data) {}\n\n  /**\n   * Called on form failure submission.\n   *\n   * @param errors {Object} Form errors object\n   * @param data {Object} Form data\n   */\n  onErrorSubmit(errors, data) {}\n\n  /**\n  * Handler for input change called internally.\n  *\n  * @param event\n  * @return {Promise} Promise resolved when data and errors are set if any\n  */\n  handleChange(event) {\n    const name   = event.target.name;\n    const value  = this._getNodeValue(event.target);\n    const errors = this._validateNode(event.target);\n\n    return Promise.all([\n      this._updateDataOf(name, value),\n      this._updateErrorsOf(name, errors),\n    ]);\n  }\n\n  /**\n  * Handler for form submission. Your form should call it as `onSubmit` handler.\n  *\n  * @param event\n  * @return {Promise} Promise resolved with `onSuccessSubmit` or `onErrorSubmit` result\n  */\n  handleSubmit(event) {\n    event.preventDefault();\n    const errors = this._createErrors();\n    return this.markAsSubmitted()\n      .then(() => this._updateErrors(errors))\n      .then(() => this.isFormValid() ?\n        this.onSuccessSubmit(this.state.data) :\n        this.onErrorSubmit(this.state.errors, this.state.data));\n  }\n\n  /**\n   * Marks form as submitted by setting `this.status.submitted` to `true`.\n   *\n   * @return {Promise} Promise resolved after state is set.\n   */\n  markAsSubmitted() {\n    return new Promise((resolve) => {\n      this.setState({ submitted: true }, resolve);\n    });\n  }\n\n  /**\n   * Determines whether form was submitted.\n   *\n   * @return {boolean}\n   */\n  isSubmited() {\n    return this.state.submitted;\n  }\n\n  /**\n   * Returns value of specified field.\n   *\n   * @param name {string} Field name\n   * @return {string|boolean|undefined} Field value\n   */\n  getValueOf(name) {\n    return this.state.data[name];\n  }\n\n  /**\n   * Links field value with form state. Simulates two way data binding.\n   *\n   * @param {string} Field name\n   * @return {Object}\n   */\n  linkStateOf(name) {\n    return {\n      value: this.state.data[name],\n      requestChange: () => this.handleChange({ target: this.refs[name] })\n    };\n  }\n\n  /**\n   * Returns form data.\n   *\n   * @return {Object} Form data which is `this.state.data`\n   */\n  getData() {\n    return this.state.data;\n  }\n\n  /**\n   * Returns form errors.\n   *\n   * @return {Object} Form data which is `this.state.errors`\n   */\n  getErrors() {\n    const errors = _(this.state.errors)\n      .omitBy(errors => !errors.length)\n      .value();\n\n    return errors;\n  }\n\n  /**\n   * Returns errors of specified field.\n   *\n   * @param {Array}\n   */\n  getErrorsOf(name) {\n    const errors = _(this.getErrors())\n      .pick(name)\n      .get(name, []);\n\n    return errors;\n  }\n\n  /**\n   * Determines whether form is valid or not based on form errors.\n   *\n   * @return {boolean}\n   */\n  isFormValid() {\n    const validity = _(this.getErrors())\n      .keys()\n      .isEmpty();\n\n    return validity;\n  }\n\n  /**\n   * Determines whether field is valid or not based on form errors.\n   *\n   * @param name {string} Field name\n   * @return {boolean}\n   */\n  isFieldValid(name) {\n    const validity = _(this.getErrorsOf(name))\n      .isEmpty()\n\n    return validity;\n  }\n\n  /**\n   * Returns final error message for particular field\n   *\n   * @param name {string} Field name\n   * @return {string} Error message for the field\n   */\n  getErrorMessageOf(name) {\n    if (!this.isSubmited() || this.isFieldValid(name)) return null;\n    const error   = _(this.getErrorsOf(name)).first();\n    const message =  this._getMessage(name, error.rule);\n    return error.data ? this._parseMessage(message, error.data) : message;\n  }\n\n  /** */\n  _createErrors() {\n    return _(this.refs)\n      .mapValues(node => this._validateNode(node))\n      .omitBy(errors => !errors.length)\n      .value();\n  }\n\n  /** */\n  _updateErrors(errors) {\n    return new Promise(resolve => {\n      this.setState({errors}, resolve);\n    });\n  }\n\n  /** */\n  _updateDataOf(name, value) {\n    return new Promise(resolve => {\n      const data = _.assign({}, this.state.data, {[name]: value});\n      this.setState({data}, resolve);\n    });\n  }\n\n  /** */\n  _updateErrorsOf(name, fieldErrors) {\n    return new Promise(resolve => {\n      const errors = _.assign({}, this.state.errors, {[name]: fieldErrors});\n      this.setState({errors}, resolve);\n    });\n  }\n\n  /** */\n  _getCustomMessageForRuleOf(name, rule) {\n    const messages = this._getCustomMessagesOf(name);\n    const message  = messages[rule];\n    return message;\n  }\n\n  /** */\n  _getCustomMessagesOf(name) {\n    const msgDataset = this.refs[name].dataset.messages;\n    const messages   = msgDataset ? JSON.parse(msgDataset) : {};\n    return messages;\n  }\n\n  /** */\n  _getMessage(name, rule) {\n    const message = this._getCustomMessageForRuleOf(name, rule) || this.constructor.DEFAULT_MESSAGES[rule];\n    if (!message) throw new Error(`Superform: There is no message for such rule. Passed: ${rule}`);\n    return message;\n  }\n\n  /** */\n  _parseMessage(message, data) {\n    const parsedMessage = message.replace(\":data\", data);\n    return parsedMessage;\n  }\n\n  /** */\n  _validateNode(node) {\n    const value = this._getNodeValue(node);\n    const rules = this._collectRules(node);\n    const fails = this._validate(value, rules);\n    return fails;\n  }\n\n  /** */\n  _getNodeValue(node) {\n    switch(node.type) {\n      case \"checkbox\":\n        return node.checked;\n      default:\n        return node.value;\n    }\n  }\n\n  /** */\n  _collectRules(node) {\n    const rules = {\n      email:     node.type === \"email\",\n      url:       node.type === \"url\",\n      pattern:   node.pattern,\n      required:  node.required,\n      min:       node.getAttribute(\"min\"),\n      max:       node.getAttribute(\"max\"),\n      minLength: node.getAttribute(\"minLength\"),\n      maxLength: node.getAttribute(\"maxLength\"),\n      equals:    node.dataset.equals,\n    };\n    return rules;\n  }\n\n  /** */\n  _validate(value, rules) {\n    const fails = [];\n\n    rules.required && !this._valueExists(value) && fails.push({ rule: \"required\" });\n\n    if (rules.pattern) {\n      rules.pattern  && !this._valueMatchesPattern(value, rules.pattern) && fails.push({ rule: \"pattern\" });\n    } else {\n      rules.email && !validator.isEmail(value) && fails.push({ rule: \"email\" });\n      rules.url   && !validator.isURL(value, {require_protocol: true}) && fails.push({ rule: \"url\" });\n    }\n\n    if (rules.required || this._valueExists(value)) {\n      rules.min       && !this._valueIsGreaterOrEqual(value, rules.min)             && fails.push({ rule: \"min\", data: rules.min });\n      rules.max       && !this._valueIsLowerOrEqual(value, rules.max)               && fails.push({ rule: \"max\", data: rules.max });\n      rules.minLength && !this._valueLengthIsGreaterOrEqual(value, rules.minLength) && fails.push({ rule: \"minLength\", data: rules.minLength });\n      rules.maxLength && !this._valueLengthIsLowerOrEqual(value, rules.maxLength)   && fails.push({ rule: \"maxLength\", data: rules.maxLength });\n    }\n\n    rules.equals && !this._valueEqualsValueOf(value, rules.equals) && fails.push({ rule: \"equals\", data: rules.equals });\n\n    return fails;\n  }\n\n  /** */\n  _valueMatchesPattern(value, pattern) {\n    return new RegExp(pattern).test(value);\n  }\n\n  /** */\n  _valueExists(value) {\n    return !!value;\n  }\n\n  /** */\n  _valueIsGreaterOrEqual(value, min) {\n    const number = parseInt(value);\n    const lower  = parseInt(min);\n    if (Number.isNaN(lower)) throw Error(`Superform: Invalid \"min\" rule. Use only with numbers. Passed: ${JSON.stringify(min)}`);\n    if (Number.isNaN(number)) return false;\n    return number >= lower;\n  }\n\n  /** */\n  _valueIsLowerOrEqual(value, max) {\n    const number = parseInt(value);\n    const higher = parseInt(max);\n    if (Number.isNaN(higher)) throw Error(`Superform: Invalid \"max\" rule. Use only with numbers. Passed: ${JSON.stringify(max)}`);\n    if (Number.isNaN(number)) return false;\n    return number <= higher;\n  }\n\n  /** */\n  _valueLengthIsGreaterOrEqual(value = \"\", minLength) {\n    const length = value.length;\n    const lower  = parseInt(minLength);\n    if (Number.isNaN(lower)) throw Error(`Superform: Invalid \"minLength\" rule. Use only with numbers. Passed: ${JSON.stringify(minLength)}`);\n    return length >= lower;\n  }\n\n  /** */\n  _valueLengthIsLowerOrEqual(value = \"\", maxLength) {\n    const length = value.length;\n    const higher = parseInt(maxLength);\n    if (Number.isNaN(higher)) throw Error(`Superform: Invalid \"maxLength\" rule. Use only with numbers. Passed: ${JSON.stringify(maxLength)}`);\n    return length <= higher;\n  }\n\n  /** */\n  _valueEqualsValueOf(value, equals) {\n    return value === this.getValueOf(equals);\n  }\n}\n\nSuperform.DEFAULT_MESSAGES = {\n  \"email\":     \"This is not a valid email.\",\n  \"url\":       \"This is not a valid URL.\",\n  \"required\":  \"Field is required.\",\n  \"pattern\":   \"Value format is invalid.\",\n  \"min\":       \"Value should be greater or equal :data.\",\n  \"max\":       \"Value should be lower or equal :data.\",\n  \"minLength\": \"Value is too short. Value length should be greater or equal :data.\",\n  \"maxLength\": \"Value is too long. Value length should be lower or equal :data.\",\n  \"equals\":    \"Value must be the same as :data.\",\n};\n\nexport default Superform;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Superform.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"React\"\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"_\"\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"validator\"\n ** module id = 4\n ** module chunks = 0\n **/"],"sourceRoot":""}